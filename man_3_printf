.TH _PRINTF 3 "25 March 2025" "Version 1.0" "User Commands"

.SH NAME
.PP
.PP
_printf - custom output formatting function

.SH SYNOPSIS
.PP
.B #include "main.h"
.PP
.B int _printf(const char *format, ...);

.SH DESCRIPTION
.PP
The \fB_printf\fR function produces output formatted according to the specifications described below (similar to the standard printf function).

The format string may contain conversion directives beginning with '%'.

Supported format specifiers:
.TP
.B %c
Prints a single character.
.TP
.B %s
Prints a string.
.TP
.B %d
Prints a decimal number.
.TP
.B %i
Prints an integer in base 10 (same use as %d).
.TP
.B %%
Prints a literal % character.

.SH RETURN VALUE
.PP
On success, returns the number of characters printed (excluding the terminating null byte).
Returns -1 if format is NULL or empty.

.SH EXAMPLES
.PP
Printing a single character:
.RS 8
_printf("Character: [%c]\n", 'H');
.RE

Printing a string:
.RS 8
_printf("String: [%s]\n", "Hello");
.RE

Printing a percent sign:
.RS 8
_printf("Percentage: [%%]\n");
.RE

Printing a positive integer:
.RS 8
_printf("Number: [%d]\n", 123);
.RE

Printing a negative integer:
.RS 8
_printf("Negative number: [%i]\n", -123);
.RE

Printing a combination of types:
.RS 8
_printf("Character: [%c], String: [%s], Integer: [%d]\n", 'X', "Test", 42);
.RE

.SH AUTHOR
.PP
Warrre and Mylliah

